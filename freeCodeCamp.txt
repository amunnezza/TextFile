p elements are the preferred element for normal-sized paragraph text on websites. 
P is short for "paragraph".

You can create a p element like this:
<p>I'm a p tag!</p>
Create a p element below your h2 element, and give it the text "Hello Paragraph".

<h1>Hello World</h1>
<h2>CatPhotoApp</h2>
<p>Hello Paragraph</p>

Commenting is a way that you can leave comments within your code without affecting the code itself.

Commenting is also a convenient way to make code inactive without having to delete it entirely.

You can start a comment with <!-- and end a comment with -->

Uncomment your h1, h2 and p elements.

<!--
<h1>Hello World</h1>

<h2>CatPhotoApp</h2>

<p>Hello Paragraph</p>
-->

Remember that in order to start a comment, you need to use <!-- and to end a comment, you need to use -->
Here you'll need to end the comment before your h2 element begins.
Comment out your h1 element and your p element, but leave your h2 element uncommented.

<!--
<h1>Hello World</h1>
-->
<h2>CatPhotoApp</h2>
<!--
<p>Hello Paragraph</p>
-->


Web developers traditionally use lorem ipsum text as placeholder text. 
The 'lorem ipsum' text is randomly scraped from a famous passage by Cicero of Ancient Rome.

Lorem ipsum text has been used as placeholder text by typesetters since the 16th century, 
and this tradition continues on the web.

Well, 5 centuries is long enough. Since we're building a CatPhotoApp, let's use 
something called kitty ipsum text.

Replace the text inside your p element with the first few words of this 
kitty ipsum text:
 Kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your 
 ankles chase the red dot, hairball run catnip eat the grass sniff.
 
 
 Our phone doesn't have much vertical space.

Let's remove the unnecessary elements so we can start building our CatPhotoApp.

Delete your h1 element so we can simplify our view.

<h2>CatPhotoApp</h2>

<p>Kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff.</p>


Change the Color of Text 
Now let's change the color of some of our text.

We can do this by changing the style of your h2 element.

The style that is responsible for the color of an element's text is the "color" style.

Here's how you would set your h2 element's text color to blue:

<h2 style="color: blue">CatPhotoApp</h2>

Change your h2 element's style so that its text color is red.
<h2 style="color: red">CatPhotoApp</h2>

<p>Kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff.</p>

Use CSS Selectors to Style Elements 
With CSS, there are hundreds of CSS properties that you can use to change the way an
element looks on your page.

When you entered <h2 style="color: red">CatPhotoApp</h2>, you were giving that
 individual h2 element an inline style.

That's one way to add style to an element, but a better way is by using CSS, 
which stands for Cascading Style Sheets.

At the top of your code, create a style element like this:
<style>
</style>
Inside that style element, you can create a CSS selector for all h2 elements. 
For example, if you wanted all h2 elements to be red, your style element 
would look like this:

<style>
  h2 {color: red;}
</style>
Note that it's important to have both opening and closing curly braces 
({ and }) around each element's style. 
You also need to make sure your element's style is between the opening and closing style 
tags. 
Finally, be sure to add the semicolon to the end of each of your element's styles.

Delete your h2 element's style attribute and instead create a CSS style element.
 Add the necessary CSS to turn all h2 elements blue.
 
 
 
 
 Use a CSS Class to Style an Element 
Classes are reusable styles that can be added to HTML elements.

Here's an example CSS class declaration:

<style>
  .blue-text {
    color: blue;
  }
</style>
You can see that we've created a CSS class called blue-text within the <style> tag.

You can apply a class to an HTML element like this:

<h2 class="blue-text">CatPhotoApp</h2>

Note that in your CSS style element, classes should start with a period. In your HTML elements' class 
declarations, classes shouldn't start with a period.

Inside your style element, change the h2 selector to .red-text and update the color's value from 
blue to red.

Give your h2 element the class attribute with a value of 'red-text'.

<style>
  .red-text{
    color: red;
  }
</style>

<h2 class="red-text">CatPhotoApp</h2>

<p>Kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles 
chase the red dot, hairball run catnip eat the grass sniff.</p>

--
Style Multiple Elements with a CSS Class 
Remember that you can attach classes to HTML elements by using 
class="your-class-here"
 within the relevant element's opening tag.

Remember that CSS class selectors require a period at the beginning like this:

.blue-text {
  color: blue;
}
But also remember that class declarations don't use a period, like this:

<h2 class="blue-text">CatPhotoApp</h2>

Apply the red-text class to your h2 and p elements.

<style>
  .red-text {
    color: red;
  }
</style>

<h2 class="red-text">CatPhotoApp</h2>

<p class = "red-text">Kitty ipsum dolor sit
 amet, shed everywhere shed everywhere stretching attack your ankles chase the 
 red dot, hairball run catnip eat the grass sniff.</p>
----
 
 Change the Font Size of an Element 
Font size is controlled by the font-size CSS property, like this:

h1 {
  font-size: 30px;
}
Create a second p element after the existing p element with the following kitty ipsum text: 
Purr jump eat the grass rip the couch scratched sunbathe, shed everywhere rip the couch sleep 
in the sink fluffy fur catnip scratched.

Inside the same <style> tag that contains your red-text class, create an entry for p elements 
and set the font-size to 16 pixels (16px).

Note
Due to browser implementation differences, you may need to be at 100% zoom to pass the tests on
 this challenge.

Also, please do not add a class attribute to your new p element.

<style>
  .red-text {
    color: red;
  }
  p {
    font-size: 16px;
  }
</style>

<h2 class="red-text">CatPhotoApp</h2>

<p class="red-text">Kitty ipsum dolor sit amet, shed everywhere shed everywhere 
stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff.</p>
<p>Purr jump eat the grass rip the couch scratched sunbathe, 
shed everywhere rip the couch sleep in the sink fluffy fur catnip scratched.</p>

Set the Font Family of an Element 
You can set an element's font by using the font-family property.

For example, if you wanted to set your h2 element's font to Sans-serif, you would use the following CSS:

h2 {
  font-family: Sans-serif;
}
Make all of your p elements use the Monospace font.


Import a Google Font 
Now, let's import and apply a Google font (note that if Google is blocked in 
your country, you will need to skip this challenge).

First, you'll need to make a call to Google to grab the Lobster font and load 
it into your HTML.

Copy the following code snippet and paste it into the top of your code editor:

<link href="https://fonts.googleapis.com/css?family=Lobster" rel="stylesheet" type="text/css">

Now you can set Lobster as a font-family value on your h2 element.

Apply the font-family of Lobster to your h2 element.

<link href="https://fonts.googleapis.com/css?family=Lobster" rel="stylesheet" type="text/css">
<style>
  .red-text {
    color: red;
  }

  p {
    font-size: 16px;
    font-family: Monospace;
  }
  h2 {
    font-family: Lobster;
  }
</style>

<h2 class="red-text">CatPhotoApp</h2>

<p class="red-text">Kitty ipsum dolor sit amet, shed everywhere shed 
everywhere stretching attack your ankles chase the red dot, hairball run
 catnip eat the grass sniff.</p>
<p class="red-text">Purr jump eat the grass rip the couch scratched sunbathe, 
shed everywhere rip the couch sleep in the sink fluffy fur catnip scratched.</p>


Create a Bulleted Unordered List
HTML has a special element for creating unordered lists, or bullet point-style lists.

Unordered lists start with a <ul> element. Then they contain some number of <li> elements.

For example:

<ul>
  <li>milk</li>
  <li>cheese</li>
</ul>
would create a bullet point-style list of "milk" and "cheese".

Remove the last two p elements and create an unordered list of three things that cats love at the bottom of the page.

<ul>
  <li> latte </li>
  <li> carne </li>
  <li> erba gattaia </li>
</ul>

Create an Ordered List
HTML has a special element for creating ordered lists, or numbered-style lists.

Ordered lists start with a <ol> element. Then they contain some number of <li> elements.

For example:

<ol>
  <li>Garfield</li>
  <li>Sylvester</li>
</ol>
would create a numbered list of "Garfield" and "Sylvester".

Create an ordered list of the top 3 things cats hate the most.

<ol>
  <li>Mouse</li>
  <li>Water</li>
  <li>Dog</li>
</ol>


Create a Text Field
Now let's create a web form.

Text inputs are a convenient way to get input from your user.

You can create one like this:

<input type="text">

Note that input elements are self-closing.

Create an input element of type text below your lists.
--------------------
Add Placeholder Text to a Text Field
Your placeholder text is what appears in your text input before your user has input anything.

You can create placeholder text like so:

<input type="text" placeholder="this is placeholder text">

Set the placeholder value of your text input to "cat photo URL".
--------------
Create a Form Element
You can build web forms that actually submit data to a server using nothing more than pure HTML. 
You can do this by specifying an action on your form element.

For example:

<form action="/url-where-you-want-to-submit-form-data"></form>

Nest your text field in a form element. Add the action="/submit-cat-photo" 
attribute to this form element.

Add a Submit Button to a Form
Let's add a submit button to your form. Clicking this button will send the data from your form to the URL you specified with your form's action attribute.

Here's an example submit button:

<button type="submit">this button submits the form</button>

Add a submit button to your form element with type submit and "Submit" as its text.

<form action="/submit-cat-photo">
  <input type="text" placeholder="cat photo URL">
  <button type="submit"> Submit </button>
</form>

-----------------
Use HTML5 to Require a Field
You can require specific form fields so that your user will not be able to submit your form 
until he or she has filled them out.

For example, if you wanted to make a text input field required, you can just add the word 
required within your input element, you would use: <input type="text" required>

Make your text input a required field, so that your user can't submit the form without completing 
this field.

Then try to submit the form without inputing any text. See how your HTML5 form notifies 
you that the field is required?

Note: This field does not work in Safari.

-------------

Create a Set of Radio Buttons
You can use radio buttons for questions where you want the user to only give you one answer.

Radio buttons are a type of input

Each of your radio buttons should be nested within its own label element.

All related radio buttons should have the same name attribute.

Here's an example of a radio button:

<label><input type="radio" name="indoor-outdoor"> Indoor</label>

Add a pair of radio buttons to your form. One should have the option of indoor and the other should have the option of outdoor.
<label><input type="radio" name="indoor-outdoor"> Indoor  
</label>
<label><input type="radio" name="indoor-outdoor"> Outdoor  
</label>
-----------------/
Create a Set of Checkboxes
Forms commonly use checkboxes for questions that may have more than one answer.

Checkboxes are a type of input

Each of your checkboxes should be nested within its own label element.

All related checkbox inputs should have the same name attribute.

Here's an example of a checkbox:

<label><input type="checkbox" name="personality"> Loving</label>

Add to your form a set of three checkboxes. Each checkbox should be nested within its own label element. 
All three should share the name attribute of personality.

<label><input type="checkbox" name="personality"> Loving</label>
  <label><input type="checkbox" name="personality"> Nervous</label>
  <label><input type="checkbox" name="personality"> Selfish</label>
  ---------------------/
  Check Radio Buttons and Checkboxes by Default
You can set a checkbox or radio button to be checked by default using the checked attribute.

To do this, just add the word "checked" to the inside of an input element. For example:

<input type="radio" name="test-name" checked>

Set the first of your radio buttons and the first of your checkboxes to both be checked by default.